stages:
  - build
  - test
  - visualize
  - package
  - deploy

build:
  stage: build
  image: openjdk:17-oracle
  tags:
    - weat-excel
  before_script:
    - microdnf install findutils
    - echo "$APPLICATION_INFO" > "src/main/resources/application.yml"
  script:
    - ./gradlew clean bootJar
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 60 min

test:
  stage: test
  image: openjdk:17-oracle
  tags:
    - weat-excel
  before_script:
    - microdnf install findutils
  script:
    - ./gradlew test
  coverage: '/    - Instruction Coverage: ([0-9.]+)%/'
  artifacts:
    paths:
      - build/reports/jacoco/test/jacoco*.xml
    reports:
      junit: build/test-results/test/**/TEST-*.xml

coverage:
  stage: visualize
  image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
  tags:
    - weat-excel
  script:
    - python /opt/cover2cover.py build/reports/jacoco/test/jacoco*.xml $CI_PROJECT_DIR/src/main/java/ > build/cobertura.xml
  needs: ["test"]
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: build/cobertura.xml

package:
  stage: package
  tags:
    - weat-excel
  services:
    - docker:20.10.23-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER_NAME -p $CI_REGISTRY_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/mentee/mentee_2023.01/team/weat/gcell-excel-server .
    - docker push $CI_REGISTRY/mentee/mentee_2023.01/team/weat/gcell-excel-server
  only:
    - dev

deploy:
  stage: deploy
  tags:
    - weat-excel
  services:
    - docker:20.10.23-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER_NAME -p $CI_REGISTRY_TOKEN $CI_REGISTRY
  script:
    - docker ps -a
    - docker-compose -f $EXCEL_DOCKER_COMPOSE down
    - docker-compose -f $EXCEL_DOCKER_COMPOSE up -d --scale $SCALE_OPTION
    - docker ps -a
  after_script:
    - docker logout
  only:
    - dev